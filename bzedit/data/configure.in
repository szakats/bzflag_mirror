AC_INIT(bzedit.cpp)
AM_INIT_AUTOMAKE(bzedit, 2.0)
AM_CONFIG_HEADER(config.h)

# Checks for programs.
AC_PROG_CXX
AC_PROG_CXXCPP
AC_PROG_INSTALL
AC_PROG_MAKE_SET

# GNOME macros
GNOME_INIT
GNOME_COMMON_INIT
GNOME_COMPILE_WARNINGS

# Internationalization
ALL_LINGUAS=""
AM_GNOME_GETTEXT

# Locale directory
AC_ARG_WITH(locale-dir, [  --with-locale-dir=DIR    install locale files in DIR [DATADIR/locale]])
if test "$USE_NLS" = "yes" ; then
	if test -n "$with_locale_dir" ; then
		localedir="$with_locale_dir"
	else
		localedir=${datadir}/locale
	fi
else
	localedir="none"
fi
AC_SUBST(localedir)

# Checks for libraries.

### GTK+ ###
AM_PATH_GTK(1.2.1, , AC_MSG_ERROR([Cannot find proper GTK+ version]))
### GTK+ ###

### OpenGL/Mesa3D ###
AC_ARG_WITH(GL-prefix,  [  --with-GL-prefix=PFX     Prefix where GL/Mesa3D is installed (optional)])
AC_ARG_WITH(lib-GL,     [  --with-lib-GL            use '-lGL' (default)])
AC_ARG_WITH(lib-MesaGL, [  --with-lib-MesaGL        use '-lMesaGL'])

if test -n "$with_GL_prefix" ; then
	GL_CFLAGS="-I$with_GL_prefix/include"
	GL_LDOPTS="-L$with_GL_prefix/lib"
else
	GL_CFLAGS=""
	GL_LDOPTS=""
fi

AC_CHECK_LIB(MesaGL, glBegin, have_MesaGL=yes, , $GTK_LIBS $GL_LDOPTS)
AC_CHECK_LIB(GL,     glBegin, have_GL=yes,     , $GTK_LIBS $GL_LDOPTS)

if test "$with_lib_GL" = "yes" ; then
	# Want to use '-lGL'
	if test "$have_GL" = "yes" ; then
		GL_LIBS="$GL_LDOPTS -lGL -lGLU"
	else
		AC_MSG_ERROR([Missing GL library])
	fi
elif test "$with_lib_MesaGL" = "yes" ; then
	# Want to use '-lMesaGL'
	if test "$have_MesaGL" = "yes" ; then
		GL_LIBS="$GL_LDOPTS -lMesaGL -lMesaGLU"
	else
		AC_MSG_ERROR([Missing Mesa3D library])
	fi
else
	# Want to use whatever is available
	# Probably '-lGL'
	if test "$have_GL" = "yes" ; then
		GL_LIBS="$GL_LDOPTS -lGL -lGLU"
	elif test "$have_MesaGL" = "yes" ; then
		GL_LIBS="$GL_LDOPTS -lMesaGL -lMesaGLU"
	else
		AC_MSG_ERROR([You need the GL or Mesa3D libraries])
	fi
fi

AC_SUBST(GL_CFLAGS)
AC_SUBST(GL_LIBS)
### OpenGL/Mesa3D ###

### GtkGLArea ###
AC_ARG_WITH(gtkgl-prefix,  [  --with-gtkgl-prefix=PFX     Prefix where gtkglarea is installed (optional)])

if test -n "$with_gtkgl_prefix" ; then
	GTKGL_CFLAGS="-I$with_gtkgl_prefix/include"
	GTKGL_LDOPTS="-L$with_gtkgl_prefix/lib"
else
	GTKGL_CFLAGS=""
	GTKGL_LDOPTS=""
fi

AC_CHECK_LIB(gtkgl, gtk_gl_area_new, gtkgl_ok=yes, , $GTKGL_LDOPTS $GTK_LIBS $GL_LIBS)

if test "$gtkgl_ok" = "yes" ; then
	GTKGL_LIBS="$GTKGL_LDOPTS -lgtkgl"
else
	AC_MSG_ERROR([Cannot find gtkglarea])
fi

AC_SUBST(GTKGL_CFLAGS)
AC_SUBST(GTKGL_LIBS)
### GtkGLArea ###

####
#### dnl Replace `main' with a function in -lgtkgl:
#### AC_CHECK_LIB(gtkgl, gtk_gl_area_new)
####

AC_LANG_CPLUSPLUS

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(stl.h)

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST

# Checks for library functions.

# Add GNOME CFLAGS
GNOME_CFLAGS="`gnome-config --cflags gnome gnomeui`"
GNOME_LIBS="`gnome-config --libs gnome gnomeui`"
AC_SUBST(GNOME_CFLAGS)
AC_SUBST(GNOME_LIBS)

AC_OUTPUT([
Makefile
data/Makefile
help/Makefile
])
