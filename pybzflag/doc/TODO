Todo list, in no particular order:

  - Add some sort of color-selection mechanism (for showing selected objects, widget
    highlighting, etc)

  - Port the jetstream particle engine (why not?)

  - Clouds

  - Stars, sun and the moon

  - Convert observers and render sequence callbacks to use weak references so it's possible
    to properly delete objects that register callbacks.

  - Enhance the ThreeDController binding system: move functionality to detect pressed
    buttons and modifiers to separate Criteria classes that can be listed when setting
    a binding. Add a Criteria for the mouse being over a named object. Move binding
    setup to a data/config.py or something similar.

  - Better options/configuration system. For example, it should be possible to switch
    between mono, stereo, and anaglyph mode transparently in any part of pybzflag.
    It should be possible to pass view-dependent options to commands for window geometry,
    fullscreen, disabling window borders, etc.

  - Unify the world cache and VRML cache

  - Add gamma correction to GLText so that the alpha blending doesn't look hideous
    when drawing light text on a dark background.

  - Write more documentation :)

  - Complete the Unicode support in GLText. This means deleting rarely used texture pages
    to prevent uncontrolled memory usage, and automatically loading auxiliary fonts
    when a character can't be located.

  - Finish the server

  - Bots!

  - Write a playable client

  - fix resizing: what might be an SDL bug is causing the window to get stuck
    resizing to its original size when using a WM or equivalent that does
    opaque resizing. Known to break under sawfish, win32, and OS X.

  - In OverheadView, update using dirty rectangles for lower CPU usage

  - Write 1D and 2D perlin noise routines, possibly ditching the 3D noise routine.
    Animated.PerlinNoise really needs a 1D rather than a 3D, and it's looking like since
    creating the noise in realtime won't be an option, we could store individual octaves
    of 2D noise and interpolate between them in realtime for our animation. At first
    I thought this would look bad, but it seems to work for Hugo:
          http://freespace.virgin.net/hugo.elias/models/m_clouds.htm

