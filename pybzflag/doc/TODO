Todo list, in no particular order:

  - Add some sort of color-selection mechanism (for showing selected objects, widget
    highlighting, etc)

  - Port the jetstream particle engine (why not?)

  - Clouds:
      * Vary the cloud velocity according to the current global wind speed.

      * Think of more ways to make the conversion from Perlin Noise to clouds run fast
        enough to animate the clouds in realtime

      * Light the clouds using bump mapping, so we can get nice edge hilights

      * optional: change all the clouds to use the technique that MS Flight Sim:
        A Century of Flight uses, because it rawks

  - Stars, sun and the moon

  - Enhance the ThreeDController binding system: move functionality to detect pressed
    buttons and modifiers to separate Criteria classes that can be listed when setting
    a binding. Add a Criteria for the mouse being over a named object. Move binding
    setup to a data/config.py or something similar.

  - Better options/configuration system. For example, it should be possible to switch
    between mono, stereo, and anaglyph mode transparently in any part of pybzflag.
    It should be possible to pass view-dependent options to commands for window geometry,
    fullscreen, disabling window borders, etc.

    How about a BZFlag.Config module that stores all configuration settings? There could
    be a Config.Loader module to manage it all, Config.Default to hold default settings,
    and a ~/.pybzflag for user customizations. The config files would be python code,
    executed in the Config module's namespace.

  - Unify the world cache and VRML cache

  - Write more documentation :)

  - Complete the Unicode support in GLText. This means deleting rarely used texture pages
    to prevent uncontrolled memory usage, and automatically loading auxiliary fonts
    when a character can't be located.

  - Finish the server

  - Bots!

  - Write a playable client

  - In OverheadView, update using dirty rectangles for lower CPU usage

  - Use a uniform distribution rather than a normal distribution to decide cubemap
    update times, make the times configurable.

